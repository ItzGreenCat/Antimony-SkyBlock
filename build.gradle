
// For those who want the bleeding edge
repositories {
    mavenCentral()
    maven { url = "https://repo.spongepowered.org/maven" }
}
buildscript {
    repositories {
        mavenCentral()
        maven {
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://repo.spongepowered.org/maven"
        }
        maven { url 'https://plugins.gradle.org/m2' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: '4.0.4'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'
apply plugin: "com.github.johnrengelman.shadow"

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "3.9"
group= "com.greencat" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Antimony-Client"

compileJava.options.encoding = "UTF-8"

configurations {
    include
    implementation.extendsFrom(include)
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_22"
    //makeObfSourceJar = false
    clientJvmArgs += ["-Dfml.coreMods.load=com.greencat.antimony.common.AntimonyMixinLoader","-Ddev-mode"]

            // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
dependencies {
    //implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.jetbrains:annotations:23.0.0'
    //implementation 'com.google.code.gson:gson:2.10'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    implementation('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

gradle.taskGraph.whenReady { taskGraph ->
    def tasks = taskGraph.getAllTasks()
    tasks.each {
        def taskName = it.getName()
        if(taskName == 'runClient') {
            println("Found $taskName")

            it.setOnlyIf { true }
            it.outputs.upToDateWhen { false }
        }
    }
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.antimony.refmap.json"
}
jar {
    manifest.attributes(
            "FMLCorePlugin": "com.greencat.antimony.common.AntimonyMixinLoader",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.antimony.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
            "FMLAT": "antimony_at.cfg"
    )

    enabled = true
}
apply plugin: "idea"

idea {
    module {
        inheritOutputDirs = true
    }
}



processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }



tasks.withType(JavaCompile) {

    options.encoding = "UTF-8"

}
reobf {
    shadowJar {}
}

jar.dependsOn("shadowJar")
shadowJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    //configurations = [project.configurations.include]
    exclude "LICENSE.md"
    exclude "dummyThing"
    exclude "**/module-info.class"
    exclude "*.so"
    exclude "*.dylib"
    exclude "*.dll"
    exclude "*.jnilib"
    exclude "ibxm/**"
    exclude "com/jcraft/**"
    exclude "org/lwjgl/**"
    exclude "net/java/**"

    exclude "META-INF/proguard/**"
    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
    exclude "META-INF/com.android.tools/**"

    exclude "fabric.mod.json"
    exclude "bungee.yml"
    exclude "plugin.yml"
    exclude "velocity-plugin.json"
    exclude "LICENSE.txt"

    exclude "mcmod.info"

    exclude "org/apache/**"
    exclude "com/google/**"
}
